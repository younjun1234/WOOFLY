<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kh.woofly.order.model.dao.OrderDAO">

	<select id="selectMyBuying" resultType="Order">
		
	    select *
	    from orders
	    where customer_id = #{id}
		    <if test="startDate != null">
		    	and order_date >= #{startDate}
		    </if>
		    <if test="endDate != null">
		    	and order_date <![CDATA[<]]> #{endDate}
		    </if>
		<if test="orderDate != null">
		    order by order_date ${orderDate}
		</if>
		<if test="price != null">
		    order by total ${price}
		</if>
    	
	</select>
	
	<select id="getBuyingCount" resultType="_int">
		select count(*)
		from orders
		where customer_id = #{id}
	</select>
	
	<select id="selectOrder" resultType="Order">
		select *
		from orders
		where order_id = #{orderNo}
	</select>
	
	<select id="selectOrderDetails" resultType="OrderDetail">
		select *
		from order_detail
			 join product using(product_id)
		where order_id = #{orderNo}
	</select>
	
	<select id="selectOrderProductsAttm" resultType="ProductAttm">
		select *
		from attachment
		where attm_ref_type = 'P' and attm_ref_no = #{productId} 
	</select>
	
	<select id="selectOrderAttm" resultType="ProductAttm">
		select * from (
			select * 
			from order_detail
                 join product using(product_id)
			     join attachment on (product_id = attm_ref_no)
			where order_id = #{orderId}
                  and attm_ref_type = 'P' 
                  and attm_level = 1 
                  and price = (select max(price)
                               from order_detail 
                                    join product 
                                         using(product_id)
                                    where order_id = #{orderId})
			order by attm_modify_date desc)
		where rownum = 1
        
	</select>
	
	<select id="selectMostExpensive" resultType="Product">
		select * from(
			select * from order_detail
				 		  join product using(product_id)
			where order_id = #{orderId}
			order by price desc)
		where rownum = 1
		
	</select>
	
	<delete id="deletePoints">
 		delete from point_history 
 		<![CDATA[
 		where transaction_datetime < (select to_date(to_char(sysdate, 'yy') - 1 || to_char(sysdate, 'MMdd'), 'yy/MM/dd') from dual)
 		and mb_id = #{id}
 		]]>
 	</delete>
 	
 	<select id="selectMyPoints" resultType="Point">
 		select * from point_history
 		where mb_id = #{id}
 	</select>
</mapper>